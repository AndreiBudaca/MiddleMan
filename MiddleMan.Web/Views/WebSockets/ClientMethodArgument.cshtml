@model MiddleMan.Web.Controllers.WebSockets.Model.WebSocketClientMethodArgumentModel

@if (!Model.IsArray)
{
  @await Html.PartialAsync("ClientMethodSingleArgument", Model)
}
else
{
  var guid = Guid.NewGuid();
  
  <div class="xyz-@guid">
    <div class="card array">
      <div class="card-header">
        <span style="margin-right: 10px">@Model.Name (array) @(Model.IsNullable ? " - optional" : string.Empty)</span>
        <button type="button" class="btn btn-secondary btn-sm add">+</button>
      </div>
      <ul class="list-group list-group-flush array-container" data-elements="0"></ul>
    </div>

    <template>
      <li class="list-group-item">
        <div style="display: flex; gap: 15px; justify-content: space-around; align-items: center;">
          @{
            Model.Name = null;
            Model.IsNullable = false;
          }
          <div style="width: 98%;">
            @await Html.PartialAsync("ClientMethodSingleArgument", Model)
          </div>
          <div>
            <button type="button" class="btn btn-danger btn-sm delete">x</button>
          </div>
        </div>
      </li>
    </template>
  </div>
  <script>
    (() => {
      const containers = document.querySelectorAll("div.xyz-@guid").forEach(container => {
        const button = container.querySelector('button.add');
        const body = container.querySelector('ul.array-container');
        const temp = container.querySelector('template');

        button.removeEventListener("click", button.clickFunction);
        button.clickFunction = () => {
          const clone = temp.content.querySelector("li.list-group-item").cloneNode(true);

          const child = body.appendChild(clone);
          const deleteButton = child.querySelector('button.delete');
          deleteButton.addEventListener("click", () => {
            body.removeChild(child);
          });

          nodeScriptReplace(child);
        }

        button.addEventListener("click", button.clickFunction);
      });
    })();
  </script>
}